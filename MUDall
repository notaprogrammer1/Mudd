import time,threading

# """``````````fffffff
# ````````ffffff1ff
# ``````ffffffff|ff
# `````fff5-4-3-2ff
# ````ffff|fffff|ff
# ```fff7-6-8-9-10f
# ``ffff|fffff|ffff
# ``ffff14-13-12-11
# ``fffffffffffffff
#
#  * = You, f = Forest, ` = Water"""

class Weapon(object):
    def __init__(self,vname,damage,speed,rarity,value,weight):
        self.vname = vname
        self.damage = damage
        self.speed = speed
        self.rarity = rarity
        self.value = value
        self.weight = weight

class NPC(object):
    def __init__(self,vname,health,damage,description, xp, hostile, dead):
        self.vname = vname
        self.health = health
        self.damage = damage
        self.description = description
        self.xp = xp
        self.hostile = False
        self.dead = False

ssword = Weapon("Steel sword",4,0,"common",10,3)
sdag = Weapon("Steel dagger",2,1,"common",7,1)
stick = Weapon("A small stick",1,0,"common",0,"10")

loc = 'beg1'
inv = [stick]
vinv = []

rat1 = NPC("Young Rat",5,1,"A hissing juvenile rat with dirty, matted fur.",2, False,False)
rat2 = NPC("Adult Rat", 9,3,"A fully grown rat",5,False,False)


bbalance = 3 # will be used as a "base balance" for recovery time.
wielded = [] # Weapon currently wielded. Can be changed to "Wielded1" or "Wielded2" for mainhand/offhand.
playerHealth = 20
balance = True

locations = {
    "beg1": {
        "description": "You are at the northernmost point in a shaded forest.",
        "exits": {"S": "beg2"},
        "interact": {},
        "items": [],
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff*ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff0-0-0-0-0ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg2": {
        "description": "You are in a shaded forest.",
        "exits": {"S": "beg10","W": "beg3","N": "beg1"},
        "interact": {},
        "enemies": [],
        "items": [sdag,ssword],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-*ff
````ffff|fffff|ff
```fff0-0-0-0-0ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg3": {
        "description": "You are in a shaded forest.",
        "exits": {"W":"beg4","E": "beg2",},
        "interact": {},
        "enemies": [],
        "items": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-*-0ff
````ffff|fffff|ff
```fff0-0-0-0-0ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg4": {
        "description": "You are in a shaded forest.",
        "exits": {"W": "beg5", "E": "beg3"},
        "items": [],
        "enemies": [rat2],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-*-0-0ff
````ffff|fffff|ff
```fff0-0-0-0-0ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg5": {
        "description": "You are in a shaded forest.",
        "exits": {"S": "beg6", "E": "beg4"},
        "items": [],
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff*-0-0-0ff
````ffff|fffff|ff
```fff0-0-0-0-0ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg6": {
        "description": "You are in a shaded forest.",
        "exits": {"W": "beg7","N": "beg5", "E": "beg8"},
        "items": [],
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff0-*-0-0-0ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg7": {
        "description": "You are in a shaded forest.",
        "exits": {"S": "beg14", "E": "beg6"},
        "items": [],
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff*-0-0-0-0ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg8": {
        "description": "You are in a shaded forest.",
        "exits": {"W": "beg6", "E": "beg9"},
        "items": [],
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff0-0-*-0-0ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg9": {
        "description": "You are in a shaded forest.",
        "exits": {"S": "beg11","W": "beg8", "E": "beg10"},
        "items": [ssword],
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff0-0-0-*-0ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg10": {
        "description": "You are in a shaded forest.",
        "exits": {"W": "beg9","N": "beg2"},
        "items": [],
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff0-0-0-0-*ff
``ffff|fffff|ffff
``ffff0-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg11": {
        "description": "You are in a shaded forest.",
        "exits": {"W": "beg12","N": "beg9"},
        "items": {},
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff0-0-0-0-0ff
``ffff|fffff|ffff
``ffff0-0-0-*ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg12": {
        "description": "You are in a shaded forest.",
        "exits": {"W": "beg13","E": "beg11"},
        "items": [],
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff0-0-0-0-0ff
``ffff|fffff|ffff
``ffff0-0-*-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg13": {
        "description": "You are in a shaded forest.",
        "exits": {"W": "beg14", "E": "beg12"},
        "items": [],
        "enemies": [],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff0-0-0-0-0ff
``ffff|fffff|ffff
``ffff0-*-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
        "beg14": {
        "description": "You are in a shaded forest.",
        "exits": {"N": "beg7", "E": "beg13"},
        "items": [],
        "enemies": [rat1],
        "maps": """``````````fffffff
````````ffffff0ff
``````ffffffff|ff
`````fff0-0-0-0ff
````ffff|fffff|ff
```fff0-0-0-0-0ff
``ffff|fffff|ffff
``ffff*-0-0-0ffff
``fffffffffffffff

 * = You, f = Forest, ` = Water"""},
}


def strike(target):
    global balance
    for i in locations[loc]["enemies"]:
        if target in str(i.vname).lower():
            balance = False
            i.health = i.health - wielded[0].damage
            i.hostile = True
            print("You hit ", i.vname, " for ", wielded[0].damage, " damage.")
            if i.health <= 0:
                print("You've slain ", i.vname, "!")
                i.dead = True
                locations[loc]["enemies"].remove(i)
            time.sleep(bbalance)
            balance = True
            print("You have recovered your balance")

def npcAttack():
    global playerHealth
    for i in locations[loc]["enemies"]:
        if i.hostile == True :
            while i.dead == False:
                print(i.vname," attacks!")
                playerHealth -= i.damage
                time.sleep(4)


c = threading.Thread(target=npcAttack)
while True:
    for i in locations[loc]["enemies"]:
        if i.hostile == True and i.dead == False:
            try:
                c.start()
            except Exception as e:
                c.join()
                print(e)

    availableExits = ", ".join(locations[loc]["exits"].keys())
    availableItems = []
    for i in locations[loc]["items"]:
        availableItems.append(i.vname)
    enemiesHere = locations[loc]["enemies"]


    print(locations[loc]["description"])
    print("Available exits are " + availableExits + " \n".upper())
    if enemiesHere != []:
        print("There are enemies here:",', '.join(rat.vname for rat in locations[loc]["enemies"]))
    if availableItems != []:
        print("The items here are :",str(availableItems)[2:-2])
    if balance == True:
        com = input(str(str(playerHealth)+">")).lower()
    if "strike" in com:
        if wielded != []:
            target = str(com.split(' ')[1]).lower() # Formatting to find the second word in input, "strike something"
            strike(target)
        else:
            print("You aren't wielding a weapon!")
    if com == "map":
        print(locations[loc]["maps"])
    if com.upper() in locations[loc]["exits"]:
        loc = locations[loc]["exits"][com.upper()]
    if "look" in com:
        if availableItems != []:
            print("The items here are :", str(availableItems)[2:-2])
        # if enemiesHere != []:
        #     print("There are enemies here:",', '.join(rat.vname for rat in locations[loc]["enemies"]))
    if "get" in com:
        target = str(com.split(' ')[1]).lower()
        for i in locations[loc]["items"]:
            if target in i.vname.lower():
                locations[loc]["items"].remove(i)
                inv.append(i)
                print("You pick up " + str(i.vname))
    if "wield" in com:
        target = str(com.split(' ')[1]).lower()
        for i in inv:
            if target in i.vname:
                wielded.append(i)
                print("You wield ",i.vname," in your right hand.")
    if "remove" in com:
        if wielded != []:
            for i in wielded:
                wielded.remove(i)
    if com == "inv":
        if wielded == []:
            print("Your hands are empty.")
        if wielded != [] :
            print("You're currently wielding: ",', '.join(i.vname for i in wielded))
        print("You have " ,', '.join(i.vname for i in inv)," in your inventory.")
